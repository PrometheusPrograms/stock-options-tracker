#!/bin/bash

echo "ðŸ¤– PythonAnywhere Automation Scripts"
echo "====================================="
echo ""

echo "ðŸ“‹ Task 1: Auto-Pull Updates (Free Tier)"
echo "----------------------------------------"
echo "Command for PythonAnywhere scheduled task:"
echo ""
echo "cd /home/YOUR_USERNAME/stock-options-tracker && git pull"
echo ""
echo "Set this to run every 5 minutes in Tasks tab"
echo ""

echo "ðŸ“‹ Task 2: Auto-Pull with Reload Trigger (Free Tier)"
echo "----------------------------------------------------"
echo "Command for PythonAnywhere scheduled task:"
echo ""
echo "cd /home/YOUR_USERNAME/stock-options-tracker"
echo "git pull"
echo "touch /tmp/reload.txt"
echo ""
echo "This creates a reload trigger file that can be monitored"
echo ""

echo "ðŸ“‹ Task 3: Continuous Auto-Pull (Paid Tier)"
echo "--------------------------------------------"
echo "Command for PythonAnywhere always-on task:"
echo ""
echo "while true; do"
echo "  cd /home/YOUR_USERNAME/stock-options-tracker"
echo "  git pull"
echo "  sleep 60"
echo "done"
echo ""
echo "This runs continuously and pulls updates every minute"
echo ""

echo "ðŸ“‹ Task 4: Auto-Pull with Web App Reload (Paid Tier)"
echo "----------------------------------------------------"
echo "Command for PythonAnywhere always-on task:"
echo ""
echo "while true; do"
echo "  cd /home/YOUR_USERNAME/stock-options-tracker"
echo "  OLD_COMMIT=\$(git rev-parse HEAD)"
echo "  git pull"
echo "  NEW_COMMIT=\$(git rev-parse HEAD)"
echo "  if [ \"\$OLD_COMMIT\" != \"\$NEW_COMMIT\" ]; then"
echo "    echo \"Changes detected, triggering reload...\""
echo "    touch /tmp/reload.txt"
echo "  fi"
echo "  sleep 60"
echo "done"
echo ""
echo "This detects changes and triggers reloads automatically"
echo ""

echo "ðŸ“‹ Task 5: Webhook Endpoint (Advanced)"
echo "--------------------------------------"
echo "Add this endpoint to your Flask app for webhook-triggered deployments:"
echo ""
echo "@app.route('/webhook/deploy', methods=['POST'])"
echo "def webhook_deploy():"
echo "    # Verify webhook secret if needed"
echo "    subprocess.run(['git', 'pull'], cwd='/home/YOUR_USERNAME/stock-options-tracker')"
echo "    return 'Deployment triggered', 200"
echo ""
echo "Then set up GitHub webhook to call this endpoint"
echo ""

echo "ðŸ”§ Setup Instructions:"
echo "======================"
echo ""
echo "1. Go to PythonAnywhere â†’ Tasks tab"
echo "2. Click 'Add a new task'"
echo "3. Choose the task type (scheduled or always-on)"
echo "4. Copy and paste one of the commands above"
echo "5. Configure the schedule (every 5 minutes for free tier)"
echo "6. Save the task"
echo ""
echo "âœ… Benefits:"
echo "- Automatic updates from GitHub"
echo "- No manual intervention needed"
echo "- Professional deployment workflow"
echo "- Easy rollback with git"
echo ""
echo "ðŸŽ¯ Your Repository: https://github.com/PrometheusPrograms/stock-options-tracker"
